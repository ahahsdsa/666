第六周作业

1.进程概念

内核的功用：进程管理、文件系统、网络功能、内存管理、驱动程序、安全功能等

Process：运行中的程序的一个副本，是被载入内存的一个指令集合

进程ID（Process ID,PID）号码被用来标记各个进程

UID、GID、和SELinux语境决定对文件系统的存取和访问权限

通常从执行进程的用户来继承

存在生命周期

task struct：Linux内核存储进程信息的数据结构格式

tasklist：多个任务的task struct组成的链表

进程创建：init：第一个进程 进程：都由其父进程创建，父子关系CoWfork(),clone()

2.进程优先级

进程优先级：系统优先级：数字越小，优先级越高

0-139（CentOS4，5）

各有140个运行队列和过期队列

0-98,99（CentOS6）

实时优先级：99-0 值最大优先级最高

nice值：-20到19，对应系统优先级100-139或99

Big O：时间复杂度，用事和规模的关系

O（1），O（logn），O（n）线性，O（n^2）抛物线，O（2^n）

3.内存工具

iostat:统计CPU和设备IO信息

示例：iostat 1 10

pmao[options]pid[...]

-x：显示详细格式的信息

示例：pmap 1

另一种实现 cat/proc/PID/maps

4.lsof

lsof：list open files查看当前系统文件的工具。在linux环境下。一切皆文件，用户通过文件不仅可以访问常规数据，还可以访问网络连接和硬件如传输控制协议|（TCP）和用户数据包协议|（UDP）套接字等，系统在后台都为该应用程序分配了一个文件描述符

kill命令：向进程发送控制信号，以实现对进程管理，每个信号对应一个数字，信号名称以SIG开头（可省略）不区分大小写

显示当前系统可用信号：kill-l 或者 trap-l

常用信号：man 7 signal

5.任务计划

Linux任务计划、周期性任务执行

未来的某时间点执行一次任务
at 指定时间点，执行一次性任务

batch 系统自行选择空闲时间去执行此处指定的任务

周期性运行某任务
cron

6.for特殊格式

双小括号方法，即|（...）格式，也可以用于算术运算

双小括号方法也可以使bash Shell实现C语言风格的变量操作 I=10 (I + +)

for循环的特殊格式： for（控制变量初始化；条件判断表达式；控制变量的修正表达式）

循环体 done

控制变量初始化：仅在运行到循环代码段时执行一次

控制变量的修正表达式：每轮循环结束会先进行控制变量修正运算，而后再做条件判断

while CONDITION;do 循环体 done

CONDITION：循环控制条件；进入循环之前，先做一次判断；每一次循环之后会再次做判断；条件为“true”则执行一次循环；知道条件测试状态为”false“终止循环

因此：CONDTION一般应该有循环控制变量；而此变量的值会在循环体不断地被修正

进入条件：CONDITION为true

退出条件：CONDITION为false

7.函数介绍

函数function是由干条shell命令组成的语句块，实现代码重用的模块化编程

它与shell程序形式上是相似的，不同的是它不是一个单独的进程，不能独立运行，而是shell程序的一部分

函数和shell程序比较相似，区别在于

Shell程序在子Shell中运行

而Shell函数在当前Shell中运行。因此在当前Shell中，函数可以对shell中变量进行修改

函数有两种返回值；

函数的执行结果返回值：（1）使用echo等命令进行输出

（2）函数体中调用命令的输出结果

函数的退出状态码：（1）默认取决于函数中执行的最后一条命令的退出状态码

（2）自定义退出状态码，其格式为：

return从函数中返回，用最后状态命令决定返回值

return 0 无错误返回。

return 1 有错误返回

变量作用域：

环境变量：当前shell和子shell有效

本地变量：只有当前shell进程有效，为执行脚本会启动专用子shell进程；因此，本地变量的作用范围是当前shell脚本程序文件，包括脚本中的函数

局部变量：函数生命周期;函数结束时变量被自动销毁

注意：如果函数中有局部变量，如果其名称同本地变量，使用局部变量

在函数只能定义局部变量的方法 local NAME=CALUE

8.信号捕捉trap

trap'触发指令'信号

进程收到系统发出的指定信号后，将执行自定义指令，而不会执行原操作

trap“信号

忽略信号的操作

trap‘-’信号

恢复原信号的操作

trap-p

列出自定义信号操作

trap finish EXIT

当脚本退出时，执行finish函数
